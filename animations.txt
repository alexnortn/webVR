




Alex Norton
2016
-


Animations

Animations in A-Frame are defined by attaching an <a-animation> element as a child of the entity to animate. The API is roughly based after the Web Animations specification.

As an introductory example, to designa  5-meter orbit on an entity about the Y-axis that takes 10 seconds,we can offset its position and animate the rotation f a parent entity. This animation starts with the inititial rotation about the Y-axis of 0 degrees and goes around to 360 degrees. It's defined with a duration of 10000 milliseconds, maintains the final value on each cycle of the animation, and loops indefinitely.

	<a-entity>
		<a-entity position="5 0 0"></a-entity>
		<a-animation attribute="rotation"
					 dur="10000"
					 fill="forwards"
					 to="0 360 0"
					 repeat="indefinite">
		</a-animation>
	</a-entity>


Attributes

	+ attribute
	+ begin
	+ delay
	+ direction
	+ dur
	+ easing
	+ end
	+ fill
	+ from
	+ repeat
	+ to


Animating Different Types of Attributes

A-Frame's animation system can animate everal possible categories of attributes.


vec3 Attributes

A-Frame has several standard vec3 components (i.e., position, rotation, scale). These components consist of three factors: X, Y, and Z. We cna pass three space deliminated numbers to the from and to attrbutes just as we would define them on an entity. In this case, the animation system will assume we are animation a vec3 value. 

For example, if we want to animate an entity going from one sport to another, we can animate the position component.

	<a-entity>
		<a-animation attribute="position"
					 from="1 1 1"
					 to="2 4 -8">
		</a-animation>
	</a-entity>


Boolean Attributes

A-Frame has several standard components that accept a single boolean value. Boolean values can be "animated" as well by flipping the boolean at the end of each aniamtion cycle.

For example, we can define an animation that toggle off the visibility of an entity after 5 seconds.

	<a-entity>
		<a-animation attribute="visible"
					 dur="5000"
					 to="false" 
					 repeat="indenfinite">	
		</a-animation>
	</a-entity>


Numeric Attributes

We can animate numerica attributes as well. For example, we can animate the intensity of the light primitive.

	<a-light intensity="1">
		<a-animation attribute="intensity" to="3"></a-animation>
	</a-light>


Color Attributes

We can animate any component property that has a color type. For example, we can animate a box from white to red.

	<a-entity id="blushing-cube" geometry="primitive: box">
		<a-animation attribute="material.color"
					 from="white"
					 to="red"
					 dur="1000">
		</a-animation>
	</a-entity>


Component Properties

We can animate a certain property of a multi-property component. To do so, we select the component property using the dot syntax: componentName.propertyName.

For example, to animate a cone's top radius, we can select the radiusTop value with geometry.radiusTop.

	<a-entity geometry="primitive: cone; radiusTop: 1">
		<a-animation attribute="geometry.radiusTop"
					 to="0.5">
		 </a-animation>
	 </a-entity>


Begin

The begin attribute defines when the animation should start playing.

This can either be a number, representing milliseconds to wait, or an event name to wait for. For example, we can define an animation that waits 2 seconds from when the animation is attached before scaling an entity.

	<a-entity>
		<a-animation attribute="scale" begin="2000" to="2 2 2"></a-animation>
	</a-entity>

Or we can define an animation that waits for the parent element to trigger an event named fade before fading an entity.

	<a-entity id="fading-cube" geometry="primitive: box" material="opacity: 1">
		<a-animation attribute="material.opacity"
					 begin="fade"
					 to="0">
		</a-animation>
	</a-entity>

	<script type="text/javascript">
		
		// Trigger an event to begin fading.
		document.querySelector('#fading-cube').emit('fade');

	</script>


Direction

The direction attribute defines which way to animate between the starting value and the final value.

When an alternating direction is defined, the animation will go back and forth between the from and to values like a yo-yo. Alternating directions only take affect when the animation is set to repeat.

	+ alternate
	+ alternate-reverse
	+ normal
	+ reverse


Easing

The easing attribute defines the easing function of the animation, which defaults to ease. there are too many easing functions to list.


Fill

The fill attributes defines the effect of animation when not actively in play. Think of fill as what values the animation sets on the entity before and/or after each animation cycle. Below are the possible values for fill and their effects.


Repeat

The repeat attibute defines how often the animation repeats. We call repeat of the animtion a cycle. Repeat can either be a number that counts down on each animation cycle until it reaches 0 at which point the animation will end, or it can be set to indefinite and the animation will loop contiuously until the animation is manually removed or stopped.


Events

The <a-animation> element emits a couple of events.

	+ animationend
	+ animationstart
